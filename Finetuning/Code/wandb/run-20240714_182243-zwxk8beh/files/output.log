
  0%|                                                                                                                                                                | 0/1480 [00:00<?, ?it/s]/home2/adyansh/LLM4ADR/research/lib/python3.11/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '












  3%|█████▏                                                                                                                                                 | 51/1480 [00:35<12:17,  1.94it/s]Traceback (most recent call last):
  File "/home2/adyansh/LLM4ADR/Finetuning/Code/local-script.py", line 145, in <module>
    training_data = trainer.train()
                   ^^^^^^^^^^^^^^^
  File "/home2/adyansh/LLM4ADR/research/lib/python3.11/site-packages/transformers/trainer.py", line 1859, in train
    return inner_training_loop(
           ^^^^^^^^^^^^^^^^^^^^
  File "/home2/adyansh/LLM4ADR/research/lib/python3.11/site-packages/transformers/trainer.py", line 2203, in _inner_training_loop
    tr_loss_step = self.training_step(model, inputs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home2/adyansh/LLM4ADR/research/lib/python3.11/site-packages/transformers/trainer.py", line 3138, in training_step
    loss = self.compute_loss(model, inputs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home2/adyansh/LLM4ADR/research/lib/python3.11/site-packages/transformers/trainer.py", line 3161, in compute_loss
    outputs = model(**inputs)
              ^^^^^^^^^^^^^^^
  File "/home2/adyansh/LLM4ADR/research/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home2/adyansh/LLM4ADR/research/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home2/adyansh/LLM4ADR/research/lib/python3.11/site-packages/torch/nn/parallel/data_parallel.py", line 184, in forward
    replicas = self.replicate(self.module, self.device_ids[:len(inputs)])
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home2/adyansh/LLM4ADR/research/lib/python3.11/site-packages/torch/nn/parallel/data_parallel.py", line 189, in replicate
    return replicate(module, device_ids, not torch.is_grad_enabled())
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home2/adyansh/LLM4ADR/research/lib/python3.11/site-packages/torch/nn/parallel/replicate.py", line 134, in replicate
    replica = module._replicate_for_data_parallel()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home2/adyansh/LLM4ADR/research/lib/python3.11/site-packages/torch/nn/modules/module.py", line 2521, in _replicate_for_data_parallel
    replica.__dict__ = self.__dict__.copy()
    ^^^^^^^^^^^^^^^^
  File "/home2/adyansh/LLM4ADR/research/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1690, in __setattr__
    def __setattr__(self, name: str, value: Union[Tensor, 'Module']) -> None:
KeyboardInterrupt