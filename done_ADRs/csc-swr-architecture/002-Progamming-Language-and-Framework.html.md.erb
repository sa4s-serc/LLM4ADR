---
title: 002. Programming Language and Framework
weight: 3
hide_in_navigation: true
parent: /decisions
last_reviewed_on: 2021-01-07
review_in: 3 months
---

# 002. Programming Language and Framework

Date: 2020-11-04

## Status

Approved

## Context

This decision is being made during Alpha. It also comes at a time that the Digital organisation within DfE are building developer capability and want the members of the developer community to readily switch between services. Hence a default preferred language and framework is desired, Digital are coalescing around Ruby and the associated Rails framework.

Rails is a development tool which gives web developers a framework, providing structure for all the code they write. The Rails framework helps developers to build websites and applications, because it abstracts and simplifies common repetitive tasks.

Rails is written in Ruby, the programming language which is also used alongside Rails. Ruby is to Rails as PHP is to Symfony and Zend, or as Python is to Django. The appeal of Ruby to developers lies in the elegance and terseness of the language.

## Decision

The decision is to align with the central Digital preference for Ruby and Rails.

Key reasons for choosing Ruby and Rails are:-

* Alignment with a large portion of the Government Digital Service sites and services, including cross service development skills within DfE. [Here](https://dfe-digital.github.io/technical-guidance/guides/default-technology-stack/#the-ruby-stack) is the DfE Technical Guidance around this.
* Optimisation around developer productivity and lower costs.
* It was created specifically for building web applications.
* Numerous code libraries (Gems) which provide free, open-source code for developers to fulfil specific needs.
* A very strong community with a great sense of collaboration and support.
* It is robust and high-quality. All Ruby developers are encouraged to follow a set of community-supported coding conventions and standards, which in turn helps produce better code, and thereby high quality digital products and services.
* It’s conventions make it much easier for developers to move between Rails services, which will tend to use the same structure and coding practices.
* A strong focus on testing, with many good testing frameworks.
* It emphasises RESTful application design. REST (REpresentational State Transfer) is a style of software architecture based around a client-server relationship. It encourages a logical structure which can be exposed as an API (Application Programing Interface) which can be used to expose platform functionality (as desired for this service).
* Is an intuitive and easy-to-read language. It uses fewer characters than other languages allowing for intuitive, natural language, coding rather than having to use lots of special characters. The flip side is that reading code is made simpler, allowing for quick on-boarding to a service and peer reviewing for example.
* Enables rapid development. Due to many of the above points, such as readily available code libraries specifically designed for websites and apps, an active community which promotes high-quality development, and code that is simple to read and write then using Rails can achieve rapid development with high-quality results.

Reasons why you might not choose Ruby and Rails are:-

* Not all hosting can support Rails - but since we are choosing where to host our service we can ensure this isn’t an issue.
* Java and PHP are more widely used and there are more developers in these languages. However there is still a strong market in Ruby developers and the very extensive open-source libraries available mean a lot can be achieved by a few developers.
* Performance and Scalability. Rails is not as fast as Java or C, but it is fast enough for this service and will horizontally scale out when needed. There are plenty of high-profile organisations relying on Rails, examples include AirBnB, Yellow Pages, Groupon, Channel 5, GitHub, Shopify and Gov.uk.

## Consequences

* Developers for the project will need Ruby and Rails expertise.
